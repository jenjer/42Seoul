!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BONUSOBJS	Makefile	/^BONUSOBJS = ${BONUSSRCS:.c=.o}$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
NAME	Makefile	/^NAME = philo$/;"	m
OBJS	Makefile	/^OBJS = ${SRCS:.c=.o}$/;"	m
PHILO_H	philo.h	/^# define PHILO_H$/;"	d
SRCS	Makefile	/^SRCS = main.c error.c init_func.c philo_utils.c philo_utils1.c ft_atoi.c \\$/;"	m
add_finished_eat	philo_utils.c	/^void	add_finished_eat(t_arg *arg)$/;"	f
arg	philo.h	/^	t_arg			*arg;$/;"	m	struct:s_philo
arg_fin_check	philo_utils2.c	/^int	arg_fin_check(t_arg *arg)$/;"	f
change_finish	philo_utils2.c	/^void	change_finish(t_arg *arg)$/;"	f
check_arg	main.c	/^int	check_arg(char *argv[])$/;"	f
check_died_in_func	philo_utils2.c	/^int	check_died_in_func(t_philo *philo, t_arg *arg, int i, long now)$/;"	f
eat_count	philo.h	/^	int				eat_count;$/;"	m	struct:s_philo
eat_times	philo.h	/^	int				eat_times;$/;"	m	struct:s_arg
finish	philo.h	/^	int				finish;$/;"	m	struct:s_arg
finish_mu	philo.h	/^	pthread_mutex_t	finish_mu;$/;"	m	struct:s_arg
finished_eat	philo.h	/^	int				finished_eat;$/;"	m	struct:s_arg
finished_eat_mu	philo.h	/^	pthread_mutex_t	finished_eat_mu;$/;"	m	struct:s_arg
forks	philo.h	/^	pthread_mutex_t	*forks;$/;"	m	struct:s_arg
ft_arg_init	init_func.c	/^int	ft_arg_init(t_arg *arg, int argc, char *argv[])$/;"	f
ft_arg_init_mutes	init_func.c	/^int	ft_arg_init_mutes(t_arg *arg)$/;"	f
ft_arg_init_mutex	philo_utils1.c	/^int	ft_arg_init_mutex(t_arg *arg)$/;"	f
ft_atoi	ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_free_thread	philo_utils1.c	/^void	ft_free_thread(t_arg *arg, t_philo *philo)$/;"	f
ft_get_time	philo_utils1.c	/^unsigned long	ft_get_time(void)$/;"	f
ft_isnum	main.c	/^int	ft_isnum(char *c)$/;"	f
ft_last_philo_action	philo_utils.c	/^void	ft_last_philo_action(t_arg *arg, t_philo *philo)$/;"	f
ft_pass_time	philo_utils2.c	/^void	ft_pass_time(long wait_time, t_arg *arg)$/;"	f
ft_philo_action	philo_utils.c	/^int	ft_philo_action(t_arg *arg, t_philo *philo)$/;"	f
ft_philo_check_finish	philo_utils1.c	/^void	ft_philo_check_finish(t_arg *arg, t_philo *philo, int i, long now)$/;"	f
ft_philo_init	init_func.c	/^int	ft_philo_init(t_philo **philo, t_arg *arg)$/;"	f
ft_philo_printf	philo_utils2.c	/^int	ft_philo_printf(t_arg *arg, int id, char *msg)$/;"	f
ft_philo_start	philo_utils.c	/^int	ft_philo_start(t_arg *arg, t_philo *philo)$/;"	f
ft_thread	philo_utils.c	/^void	*ft_thread(void *argv)$/;"	f
id	philo.h	/^	int				id;$/;"	m	struct:s_philo
last_eat_time	philo.h	/^	long			last_eat_time;$/;"	m	struct:s_philo
last_eat_time_mu	philo.h	/^	pthread_mutex_t	last_eat_time_mu;$/;"	m	struct:s_philo
left	philo.h	/^	int				left;$/;"	m	struct:s_philo
main	main.c	/^int	main(int argc, char *argv[])$/;"	f
make_while	main.c	/^void	make_while(t_arg *arg)$/;"	f
philo_num	philo.h	/^	int				philo_num;$/;"	m	struct:s_arg
print	philo.h	/^	pthread_mutex_t	print;$/;"	m	struct:s_arg
print_error	error.c	/^int	print_error(char *msg, int num)$/;"	f
right	philo.h	/^	int				right;$/;"	m	struct:s_philo
s_arg	philo.h	/^typedef struct s_arg$/;"	s
s_philo	philo.h	/^typedef struct s_philo$/;"	s
start	ft_atoi.c	/^static int	start(const char *str, size_t *i)$/;"	f	file:
start	philo.h	/^	pthread_mutex_t	start;$/;"	m	struct:s_arg
start_time	philo.h	/^	long			start_time;$/;"	m	struct:s_arg
t_arg	philo.h	/^}	t_arg;$/;"	t	typeref:struct:s_arg
t_philo	philo.h	/^}	t_philo;$/;"	t	typeref:struct:s_philo
thread	philo.h	/^	pthread_t		thread;$/;"	m	struct:s_philo
time_check	philo_utils1.c	/^int	time_check(t_arg *arg)$/;"	f
time_to_die	philo.h	/^	long			time_to_die;$/;"	m	struct:s_arg
time_to_eat	philo.h	/^	int				time_to_eat;$/;"	m	struct:s_arg
time_to_end	philo.h	/^	long			time_to_end;$/;"	m	struct:s_arg
time_to_sleep	philo.h	/^	int				time_to_sleep;$/;"	m	struct:s_arg
